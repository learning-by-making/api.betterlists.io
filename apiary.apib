FORMAT: 1A
HOST: http://api.betterlists.io/

# betterlists

[DRAFT]
Api for `betterlists` project (Learning By Making)

# Data Structures

## Sign In (object)
+ data
    + type: auth (string, required)
    + attributes
        + email: johndoe@example.com (string, required)
        + password: sekr3t (string, required)

## Password (object)
+ data
    + type: password (string, required)
    + attributes
        + password: sekr3t (string)
        + password_confirmation: sekr3t (string)

## Reset Password (object)
+ data
    + type: reset_password (string, required)
    + attributes
        + email: johndoe@example.com (string, required)
        + redirect_url: https://betterlist.io/home (string, required)

##########################################################################

## Author Attributes (object)
+ name: John (string)
+ surname: Doe (string)

## User Attributes (object)
+ Include Author Attributes
+ email: johndoe@example.com (string)
+ city: Rome (string)
+ privacy: true (boolean)
+ phone: +12 213 1232121 (string)

## User Attributes New (object)
+ Include User Attributes
+ password: sekr3t (string)
+ password_confirmation: sekr3t (string)

## Author Base (object)
+ id: 1
+ type: user (string, required)
+ attributes (Author Attributes)

## User Base New (object)
+ type: user (string, required)
+ attributes (User Attributes New)

## User Base Edit (object)
+ id: 1
+ type: user (string, required)
+ attributes (User Attributes New)

## User Base (object)
+ id: 1
+ type: user (string, required)
+ attributes (User Attributes)

## User New (object)
+ data (User Base New)

## User Edit (object)
+ data (User Base Edit)

## User (object)
+ data (User Base)

## Author (object)
+ data (Author Base)

##########################################################################

## List Base New (object)
+ type: list (string, required)
+ attributes
    + title: A list (string, required)

## List Base (object)
+ id: 1
+ Include List Base New

## List Base With Relationships (object)
+ Include List Base
+ relationships
    + author
        + links
            + related: /lists/1/author (string, required)
    + resources
        + links
            + related: /lists/1/resources (string, required)

## List New (object)
+ data (List Base New)

## List (object)
+ data (List Base)

## List With Relationships (object)
+ data (List Base With Relationships)

## List Collection (object)
+ Include List Pagination Links
+ data (array[List Base])

## List Collection With Relationships (object)
+ Include List Pagination Links
+ data (array[List Base With Relationships])

## List Pagination Links (object)
+ links
    + self: /lists?page[number]=3&page[size]=1
    + first: /lists?page[number]=1&page[size]=1
    + prev: /lists?page[number]=2&page[size]=1
    + next: /lists?page[number]=4&page[size]=1
    + last: /lists?page[number]=13&page[size]=1

## List With Relationships Including Author and Resources (object)
+ Include List With Relationships
+ included (array[Author, Resource Base With Relationships and Included Vote])

##########################################################################

## Resource Base New (object)
+ type: resource (string, required)
+ attributes
    + title: A List's Resource (string, required)
    + url: http://jsonapi.org/ (string)

## Resource Base (object)
+ id: 1
+ Include Resource Base New

## Resource Base With Relationships (object)
+ Include Resource Base
+ relationships
    + vote
        + links
            + related: /resources/1/votes/1 (string)

## Resource Base With Relationships and Included Vote (object)
+ Include Resource Base With Relationships
+ included (Vote Base)

## Resource New (object)
+ data (Resource Base New)

## Resource (object)
+ data (Resource Base)

## Resource With Relationships (object)
+ data (Resource Base With Relationships)

## Resource Collection (object)
+ data (array[Resource Base])

## Resource Collection With Relationships (object)
+ Include Resource Pagination Links
+ data (array[Resource Base With Relationships])

## Resource Pagination Links (object)
+ links
    + self: /resources?page[number]=3&page[size]=1
    + first: /resources?page[number]=1&page[size]=1
    + prev: /resources?page[number]=2&page[size]=1
    + next: /resources?page[number]=4&page[size]=1
    + last: /resources?page[number]=13&page[size]=1

##########################################################################

## Vote Base New (object)
+ type: vote (string, required)
+ attributes
    + value: 0 (number, required)

## Vote Base (object)
+ id: 1
+ Include Vote Base New

## Vote New (object)
+ data (Vote Base New)

## Vote (object)
+ data (Vote Base)

##########################################################################

## Generic Base New (object)
+ type: generic (string, required)
+ attributes
    + attribute: A Generic Resource (string, required)

## Generic Base (object)
+ id: 1
+ Include Generic Base New

## Generic New (object)
+ data (Generic Base New)

## Generic (object)
+ data (Generic Base)

## Generic Invalid Attribute (object)
+ id: 1
+ data
    + type: generic (string, required)
    + attributes
        + attribute: too short (string, required)

## Generic Wrong Type (object)
+ id: 1
+ data
    + type: wrong_type (string, required)
    + attributes
        + attribute: A Generic Resource (string, required)

## Generic Wrong Id (object)
+ id: 2
+ Include Generic Base New

## Generic Collection (object)
+ data (array[Generic Base])

##########################################################################

# Group Authentication

## Manage Account [/auth]

### Account Registration [POST]
#### Create a new profile

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

    + Attributes (User New)

+ Response 201 (application/vnd.api+json)

    + Headers
            
            Location: /users/1

   + Attributes (User)

### Account updates [PUT]
#### Edit my profile

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com
            
    + Attributes (User Edit)
            
+ Response 200 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (User)

### Account deletion [DELETE]
#### Delete (deactivate) my profile

+ Request (application/vnd.api+json)
    
    + Headers
            
            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

+ Response 204 (application/vnd.api+json)

## Registration Confirmation [/auth/confirmation?confirmation_token=cacCESRq2swT-5NRjSwi&redirect_url=https://betterlist.io/home]

### Registration Confirmation [GET]
#### Confirm your account

+ Request (application/vnd.api+json)

+ Response 301 (application/vnd.api+json)

## Sign In [/auth/sign_in]

### Sign In [POST]
#### Login with email and password 

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

    + Attributes (Sign In)

+ Response 200 (application/vnd.api+json)

    + Headers

            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (User)

## Sign Out [/auth/sign_out]

### Sign Out [DELETE]

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

+ Response 204 (application/vnd.api+json)

## OAuth2 Request [/auth/{provider}]

### OAuth2 Request [GET]
#### Destination for client authentication

+ Request (application/vnd.api+json)

+ Response 301 (application/vnd.api+json)

## OAuth2 Response [/auth/{provider}/callback]

### OAuth2 Response [POST]
#### Destination for the oauth2 provider's callback uri

+ Request (application/vnd.api+json)

+ Response 200 (application/vnd.api+json)

    + Headers

            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (User)

## Validate Token [/auth/validate_token]

### Validate Token [GET]
#### Validate tokens on return visits to the client

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

+ Response 200 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (User)

## Password [/auth/password]

### Reset Password [POST]
#### Send a password reset confirmation email 

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com
            
    + Attributes (Reset Password)

+ Response 200 (application/vnd.api+json)

### Change Password [PUT]
#### Change users' passwords

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (Password)

+ Response 200 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (User)

## Reset Password Confirmation [/auth/password/edit?redirect_url=https://betterlist.io/home&reset_password_token=krcYvhZRxZ1cqseKH3iN]

### Reset Password Confirmation [GET]
#### Verify user by password reset token

+ Request (application/vnd.api+json)

+ Response 301 (application/vnd.api+json)

# Group User

## User [/users/{id}]

+ Parameters
    + id (number) - ID of the User in the form of an integer

### Get user profile [GET]
#### See my profile

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

+ Response 200 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com
            
    + Attributes (User)

# Group List

## List [/lists/{id}]

+ Parameters
    + id: 1 (required, string) - list id

### Fetch [GET]
#### See a single list

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Attributes (List With Relationships)

### Fetch a list including its author and resources [GET /lists/{id}?include=author,resources]
#### Embed any lists in any website

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Attributes (List With Relationships Including Author and Resources)

### Update [PATCH]
#### Change the title of a list

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (List)

+ Response 201 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (List With Relationships)

### Delete [DELETE]
#### Archive a list (not delete)

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

+ Response 204 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

## List Collection [/lists]

### Fetch all lists [GET]
#### See a list of lists or 
#### See all my lists (with authentication token)

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Attributes (List Collection With Relationships)

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

+ Response 200 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (List Collection With Relationships)

### Create [POST]
#### Create a list

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (List New)

+ Response 201 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com
            
    + Attributes (List With Relationships)

# Group List's Resource

## List's Resource [/lists/{list_id}/resources/{resource_id}]

+ Parameters
    + list_id: 1 (required, string) - request list id
    + resource_id: 1 (required, string) - request resource id

### Fetch [GET]
#### required?

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Attributes (Resource With Relationships)

### Update [PATCH]
#### Update a resource

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (Resource)

+ Response 201 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (Resource With Relationships)

### Delete [DELETE]
#### Remove a resource

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

+ Response 204 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

## List's Resource Collection [/lists/{id}/resources{?sort,page}]

+ Parameters
    + id: 1 (required, string) - list id

### Fetch all resources [GET]
#### See last added resources in a list if sorting by 'created_at' in combination with pagination

+ Parameters
    + sort: `-created_at` (string, optional)
    + page (enum, optional)
        + number: 1 (integer, optional)
        + size: 5 (integer, optional)

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Attributes (Resource Collection With Relationships)

### Create [POST]
#### Add a resource

+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   NyUIH_nI3vsKkNFtu3hmOA
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

    + Attributes (Resource New)

+ Response 201 (application/vnd.api+json)

    + Headers

            Access-Token:   0QnDIAYmMBNGtwxXo7AQiw
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com
            
    + Attributes (Resource With Relationships)

# Group List's Author

## User [/lists/{id}/author]

+ Parameters
    + id: 1 (required, string) - list id

### Get list's author profile [GET]
#### required?

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Attributes (Author)
    
# Group Resource's Vote

## Resource's Vote [/resources/{id}/vote]

+ Parameters
    + id: 1 (required, string) - resource id

### Get the singular vote of a resource [GET]
##### see how many listers voted a resource in a list

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Attributes (Vote)
    
### Increment by one the vote's value [PATCH]
#### add my vote to a resource I like

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 200 (application/vnd.api+json)

    + Attributes (Vote)
    
# Group Errors

## Invalid Token [/requests]

### Invalid Token [GET]

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 401 (application/vnd.api+json)

        {
            errors: [{
                "status": "401",
                "title": "Unauthorized",
                "detail": "Authorization header missing"
            }]
        }
        
+ Request (application/vnd.api+json)

    + Headers

            Accept:         application/vnd.api+json
            Access-Token:   invalid_token
            Client:         R9H84prlUIrrYPXr4iKuDQ
            Expiry:         1438378648
            Token-Type:     Bearer
            UID:            johndoe@example.com

+ Response 401 (application/vnd.api+json)

        {
            errors: [{
                "status": "401",
                "title": "Unauthorized",
                "detail": "Token invalid"
            }]
        }

## Generic Resource [/generics/{id}]

+ Parameters

    + id: 1 (required, string) - generic resource id

### fetch generic resource that not exist [GET]

#### Responses
http://jsonapi.org/format/#fetching-resources-responses
##### 404 Not Found
A server MUST respond with 404 Not Found when processing a request to fetch a single resource that does not exist.

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 404 (application/vnd.api+json)

        {
            errors: [{
                "status": "404",
                "title": "Not Found",
                "detail": "Generic Resource Not Found"
            }]
        }

### update generic resource [PATCH]
 
#### Responses
http://jsonapi.org/format/#crud-updating-responses
##### 403 Forbidden
A server MUST return 403 Forbidden in response to an unsupported request to update a resource or relationship.
##### 404 Not Found
A server MUST return 404 Not Found when processing a request to modify a resource that does not exist.
##### 409 Conflict
A server MAY return 409 Conflict when processing a PATCH request to update a resource if that update would violate other server-enforced constraints (such as a uniqueness constraint on a property other than id).
A server MUST return 409 Conflict when processing a PATCH request in which the resource object's type and id do not match the server's endpoint.
A server SHOULD include error details and provide enough information to recognize the source of the conflict.

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
        
    + Attributes (Generic)
         
+ Response 403 (application/vnd.api+json)

        {
            errors: [{
                "status": "403",
                "title": "Forbidden",
                "detail": "Unknown request type"
            }]
        }

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
            
    + Attributes (Generic)

+ Response 404 (application/vnd.api+json)

        {
            errors: [{
                "status": "404",
                "title": "Not Found",
                "detail": "Generic Resource Not Found"
            }]
        }

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
            
    + Attributes (Generic Invalid Attribute)

+ Response 409 (application/vnd.api+json)

        {
            errors: [{
                "status": "409",
                "title": "Conflict",
                "detail": "Invalid attibute provided: too short, it's lenght must be minimum 10 chars"
            }]
        }

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
            
    + Attributes (Generic Wrong Type)

+ Response 409 (application/vnd.api+json)

        {
            errors: [{
                "status": "409",
                "title": "Conflict",
                "detail": "Invalid type provided, only supported type is 'generic_resource'"
            }]
        }
        
+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
            
    + Attributes (Generic Wrong Id)

+ Response 409 (application/vnd.api+json)

        {
            errors: [{
                "status": "409",
                "title": "Conflict",
                "detail": "Invalid id provided, only supported id is '1'"
            }]
        }

### Delete [DELETE]

#### Responses
http://jsonapi.org/format/#crud-deleting-responses

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 404 (application/vnd.api+json)

        {
            errors: [{
                "status": "404",
                "title": "Not Found",
                "detail": "Generic Resource Not Found"
            }]
        }

## Generic Resource Collection [/generics]

### CREATE [POST]

#### Responses
http://jsonapi.org/format/#crud-creating-responses
http://jsonapi.org/format/#crud-creating-client-ids
##### 403 Forbidden
A server MAY return 403 Forbidden in response to an unsupported request to create a resource.
A server MUST return 403 Forbidden in response to an unsupported request to create a resource with a client-generated ID.
##### 409 Conflict
A server MUST return 409 Conflict when processing a POST request to create a resource with a client-generated ID that already exists.
A server MUST return 409 Conflict when processing a POST request in which the resource object's type is not among the type(s) that constitute the collection represented by the endpoint.
A server SHOULD include error details and provide enough information to recognize the source of the conflict.

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
        
    + Attributes (Generic New)
         
+ Response 403 (application/vnd.api+json)

        {
            errors: [{
                "status": "403",
                "title": "Forbidden",
                "detail": "Unknown request type"
            }]
        }

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
            
    + Attributes (Generic)

+ Response 403 (application/vnd.api+json)

        {
            errors: [{
                "status": "403",
                "title": "Forbidden",
                "detail": "Unsupported request to create a resource with a client-generated ID"
            }]
        }

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
            
    + Attributes (Generic Wrong Type)

+ Response 409 (application/vnd.api+json)

        {
            errors: [{
                "status": "409",
                "title": "Conflict",
                "detail": "Invalid type provided, only supported type is 'generic_resource'"
            }]
        }

## Generic Nested Resource [/parents/{parent_id}/generics{id}]

+ Parameters

    + parent_id: 1 (required, string) - parent resource id
    + id: 1 (required, string) - generic resource id

### fetch a nested resource of a parent resource that not exist [GET]

#### Responses
http://jsonapi.org/format/#fetching-relationships-responses
##### 404 Not Found
A server MUST return 404 Not Found when processing a request to fetch a relationship link URL that does not exist.
###### Note: This can happen when the parent resource of the relationship does not exist.

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 404 (application/vnd.api+json)

        {
            errors: [{
                "status": "404",
                "title": "Not Found",
                "detail": "Parent Resource Not Found"
            }]
        }

### update a nested resource of a generic resource that not exist [PATCH]

#### Responses
http://jsonapi.org/format/#crud-updating-responses
http://jsonapi.org/format/#crud-updating-relationship-responses
##### 403 Forbidden
A server MUST return 403 Forbidden in response to an unsupported request to update a relationship.
##### 404 Not Found
A server MUST return 404 Not Found when processing a request that references a related resource that does not exist.

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
            
    + Attributes (Generic)

+ Response 403 (application/vnd.api+json)

        {
            errors: [{
                "status": "403",
                "title": "Forbidden",
                "detail": "Unknown request type"
            }]
        }

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json
            
    + Attributes (Generic)

+ Response 404 (application/vnd.api+json)

        {
            errors: [{
                "status": "404",
                "title": "Not Found",
                "detail": "Parent Resource Not Found"
            }]
        }
        
## Generic Nested Resource Collection [/parents/{parent_id}/generics]

+ Parameters

    + parent_id: 1 (required, string) - parent resource id
    
### Fetch all nested resource of a parent resource that not exist [GET]

#### Responses
http://jsonapi.org/format/#fetching-relationships-responses
##### 404 Not Found
A server MUST return 404 Not Found when processing a request to fetch a relationship link URL that does not exist.
###### Note: This can happen when the parent resource of the relationship does not exist.

+ Request (application/vnd.api+json)

    + Headers

            Accept: application/vnd.api+json

+ Response 404 (application/vnd.api+json)

        {
            errors: [{
                "status": "404",
                "title": "Not Found",
                "detail": "Parent Resource Not Found"
            }]
        }